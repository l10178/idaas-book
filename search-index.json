[{"content":"keycloak 是一个开源的、面向现代应用和服务的 IAM（身份认证和访问控制）解决方案。\n主要功能：\nSSO\n单点登录（Single-Sign On），支持 OpenID Connect、OAuth 2.0、SAML 2.0 标准协议。 Identity Brokering and Social Login\n通过配置，可实现对不同身份认证服务的集成，通过这些身份认证服务登录应用。如 GitHub、Google 等，开源社区也有人提供了微信集成方案。 User Federation\n用户联合，提供了对 LDAP、Active Directory、Kerberos 的集成方案。 Client Adapters\n不同平台多种语言的支持，Java、Python、Go、Node.js、Spring、Quarkus 等。 后台管理\n提供了多种语言的后台管理界面，如果想偷懒的话改改图标定制个主题就能拿来用。同时还有 CLI 、SDK 和 RESTful API。 授权服务\n提供基于 RBAC、ABAC、UBAC 等多种策略的授权功能。 其他常用功能\n密码策略、暴力检测、MFA、日志审计。 选型参考 为什么可能选他：\nRedhat 开源，CNCF 项目，稳定质量可靠，一直在演进和更新。 易开发易扩展，相对 CAS，尤其是对于 Java 开发者。 功能丰富易用，如果只是要一个简单的 IAM，几乎是开箱即用。 标准实现，易集成，大厂背书。Kubernetes、Grafana、Kibana、Rancher、Vault、Harbor、Jenkins、Activiti 等等天然支持。 为什么可能不选他：\n如果你有定制开发的话，版本升级并不友好，也不太难，因人而异。 中文并不友好，包括界面中的中文翻译其实不符合国人习惯，这也是为啥有 IDaaS Book 这个项目。 名词解释 IAM Identity and Access Management，身份认证和访问控制。\nMFA Multi-Factor Authentication，多重身份认证，多因子认证。\n","date":"2020-09-26","id":0,"permalink":"/docs/keycloak/getting-started/","summary":"\u003cp\u003e\u003ca href=\"https://www.keycloak.org\"\u003ekeycloak\u003c/a\u003e 是一个开源的、面向现代应用和服务的 IAM（身份认证和访问控制）解决方案。\u003c/p\u003e\n\u003cp\u003e主要功能：\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eSSO\u003cbr\u003e\n单点登录（Single-Sign On），支持 OpenID Connect、OAuth 2.0、SAML 2.0 标准协议。\u003c/li\u003e\n\u003cli\u003eIdentity Brokering and Social Login\u003cbr\u003e\n通过配置，可实现对不同身份认证服务的集成，通过这些身份认证服务登录应用。如 GitHub、Google 等，开源社区也有人提供了微信集成方案。\u003c/li\u003e\n\u003cli\u003eUser Federation\u003cbr\u003e\n用户联合，提供了对 LDAP、Active Directory、Kerberos 的集成方案。\u003c/li\u003e\n\u003cli\u003eClient Adapters\u003cbr\u003e\n不同平台多种语言的支持，Java、Python、Go、Node.js、Spring、Quarkus 等。\u003c/li\u003e\n\u003cli\u003e后台管理\u003cbr\u003e\n提供了多种语言的后台管理界面，如果想偷懒的话改改图标定制个主题就能拿来用。同时还有 CLI 、SDK 和 RESTful API。\u003c/li\u003e\n\u003cli\u003e授权服务\u003cbr\u003e\n提供基于 RBAC、ABAC、UBAC 等多种策略的授权功能。\u003c/li\u003e\n\u003cli\u003e其他常用功能\u003cbr\u003e\n密码策略、暴力检测、MFA、日志审计。\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"选型参考\"\u003e选型参考\u003c/h2\u003e\n\u003cp\u003e为什么可能选他：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eRedhat 开源，\u003ca href=\"https://www.cncf.io/\"\u003eCNCF\u003c/a\u003e 项目，稳定质量可靠，一直在演进和更新。\u003c/li\u003e\n\u003cli\u003e易开发易扩展，相对 CAS，尤其是对于 Java 开发者。\u003c/li\u003e\n\u003cli\u003e功能丰富易用，如果只是要一个简单的 IAM，几乎是开箱即用。\u003c/li\u003e\n\u003cli\u003e标准实现，易集成，大厂背书。Kubernetes、Grafana、Kibana、Rancher、Vault、Harbor、Jenkins、Activiti 等等天然支持。\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003e为什么可能不选他：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e如果你有定制开发的话，版本升级并不友好，也不太难，因人而异。\u003c/li\u003e\n\u003cli\u003e中文并不友好，包括界面中的中文翻译其实不符合国人习惯，这也是为啥有 IDaaS Book 这个项目。\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch3 id=\"名词解释\"\u003e名词解释\u003c/h3\u003e\n\u003cp\u003e\u003cstrong\u003eIAM\u003c/strong\u003e Identity and Access Management，身份认证和访问控制。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eMFA\u003c/strong\u003e Multi-Factor Authentication，多重身份认证，多因子认证。\u003c/p\u003e","tags":[],"title":"Keycloak 简介"},{"content":"","date":"2023-09-07","id":1,"permalink":"/docs/guides/","summary":"","tags":[],"title":"Guides"},{"content":"A book about identity as a service (IDaaS).\n一本关于身份即服务的书，翻译和汇总 IAM、IDaaS、OAuth2 等相关专业知识，介绍相关的 keycloak、CAS、Dex 等软件，记录使用中遇到的问题和解决方案。\n","date":"2023-09-07","id":2,"permalink":"/docs/guides/introduction/","summary":"\u003cp\u003eA book about identity as a service (IDaaS).\u003c/p\u003e\n\u003cp\u003e一本关于身份即服务的书，翻译和汇总 IAM、IDaaS、OAuth2 等相关专业知识，介绍相关的 keycloak、CAS、Dex 等软件，记录使用中遇到的问题和解决方案。\u003c/p\u003e","tags":[],"title":"Introduction"},{"content":"","date":"2023-09-07","id":3,"permalink":"/docs/keycloak/","summary":"","tags":[],"title":"Keycloak"},{"content":"","date":"2023-09-07","id":4,"permalink":"/docs/references/","summary":"","tags":[],"title":"参考资料"},{"content":"","date":"2023-09-07","id":5,"permalink":"/blog/","summary":"","tags":[],"title":"Blog"},{"content":"","date":"2023-09-07","id":6,"permalink":"/docs/","summary":"","tags":[],"title":"Docs"},{"content":"A book about identity as a service (IDaaS).\n一本关于身份即服务的书，翻译和汇总 IAM、IDaaS、OAuth2 等相关专业知识，介绍相关的 keycloak、CAS、Dex 等软件，记录使用中遇到的问题和解决方案，让 IDaaS 领域相关的问题更容易理解。\n","date":"2023-09-07","id":7,"permalink":"/","summary":"\u003cp\u003eA book about identity as a service (IDaaS).\u003c/p\u003e\n\u003cp\u003e一本关于身份即服务的书，翻译和汇总 IAM、IDaaS、OAuth2 等相关专业知识，介绍相关的 keycloak、CAS、Dex 等软件，记录使用中遇到的问题和解决方案，让 IDaaS 领域相关的问题更容易理解。\u003c/p\u003e","tags":[],"title":"IDaaS Book"},{"content":"问题描述 我的 keycloak 集群是跑在 Kubernetes 上，初始化了一些配置想完整的导出来。\n比如按照官方的指导文档，在 keycloak pod 内用下面的命令导出。\n./standalone.sh -Dkeycloak.migration.action=export -Dkeycloak.migration.provider=singleFile -Dkeycloak.migration.file=keycloak-export.json\r出现类似下面错误。\nERROR [org.jboss.as.controller.management-operation] (Controller Boot Thread) WFLYCTL0013: Operation (\u0026#34;add\u0026#34;) failed - address: ([ (\u0026#34;core-service\u0026#34; =\u0026gt; \u0026#34;management\u0026#34;), (\u0026#34;management-interface\u0026#34; =\u0026gt; \u0026#34;http-interface\u0026#34;) ]) - failure description: { \u0026#34;WFLYCTL0080: Failed services\u0026#34; =\u0026gt; {\u0026#34;org.wildfly.management.http.extensible\u0026#34; =\u0026gt; \u0026#34;java.net.BindException: Address already in use /127.0.0.1:9990\u0026#34;}, \u0026#34;WFLYCTL0288: One or more services were unable to start due to one or more indirect dependencies not being available.\u0026#34; =\u0026gt; { \u0026#34;Services that were unable to start:\u0026#34; =\u0026gt; [\u0026#34;org.wildfly.management.http.extensible.shutdown\u0026#34;], \u0026#34;Services that may be the cause:\u0026#34; =\u0026gt; [\u0026#34;jboss.remoting.remotingConnectorInfoService.http-remoting-connector\u0026#34;] } }\r问题原因 根据错误提示，端口被占用，原因是 keycloak 导出脚本也会启动 Wildfly 服务，默认的 http、https、management 等的端口已经被占用。\n解决方案 命令行增加环境变量-Djboss.socket.binding.port-offset=100，指定不同的服务端口进行导出。\nkubectl -n keycloak exec -it keycloak-0 -- /opt/jboss/keycloak/bin/standalone.sh -Djboss.socket.binding.port-offset=100 -Dkeycloak.migration.action=export -Dkeycloak.migration.provider=dir -Dkeycloak.migration.dir=/tmp\r导出成功后，Ctrl-C 停止导出的进程，再通过 kubectl cp 将文件复制出来。\n另外注意导出的文件我放在了 /tmp 里，因为 pod 里默认的用户没有写权限。\n如果导出的配置比较复杂，比如包含授权策略，导入时还可能会出现以下错误。\nFATAL [org.keycloak.services] (ServerService Thread Pool -- 63) java.lang.RuntimeException: Script upload is disabled\r解决方案，在导入命令里再追加一个环境变量。\n-Dkeycloak.profile.feature.upload_scripts=enabled\r注意事项 管理控制台也能导入导出，不过导出的不全，比如密码密钥肯定时无法导出的。 导出的文件是普通的 json 文件，可以按照他现有的格式根据需要自己去写，不必每次改动都导出一次。 Realm 配置、用户、Client 都可以通过 kcadm.sh 分别导入，所以如果有一些特殊定制，可以考虑将配置分开后独立导入。 ","date":"2021-01-10","id":8,"permalink":"/docs/keycloak/troubleshooting/export-import-on-k8s/","summary":"\u003ch2 id=\"问题描述\"\u003e问题描述\u003c/h2\u003e\n\u003cp\u003e我的 keycloak 集群是跑在 Kubernetes 上，初始化了一些配置想完整的导出来。\u003c/p\u003e\n\u003cp\u003e比如按照官方的指导文档，在 keycloak pod 内用下面的命令导出。\u003c/p\u003e\n\r\n\r\n\r\n\u003cdiv class=\"expressive-code\"\u003e\r\n  \u003cfigure class=\"frame is-terminal not-content\"\u003e\r\n  \u003cfigcaption class=\"header\"\u003e\r\n    \u003cspan class=\"title\"\u003e\u003c/span\u003e\r\n  \u003c/figcaption\u003e\r\n  \u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e./standalone.sh -Dkeycloak.migration.action\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"nb\"\u003eexport\u003c/span\u003e -Dkeycloak.migration.provider\u003cspan class=\"o\"\u003e=\u003c/span\u003esingleFile -Dkeycloak.migration.file\u003cspan class=\"o\"\u003e=\u003c/span\u003ekeycloak-export.json\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\r\n  \u003c/figure\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003e出现类似下面错误。\u003c/p\u003e\n\r\n\r\n\r\n\u003cdiv class=\"expressive-code\"\u003e\r\n  \u003cfigure class=\"frame not-content\"\u003e\r\n  \u003cfigcaption class=\"header\"\u003e\r\n    \u003cspan class=\"title\"\u003e\u003c/span\u003e\r\n  \u003c/figcaption\u003e\r\n  \u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-log\" data-lang=\"log\"\u003eERROR [org.jboss.as.controller.management-operation] (Controller Boot Thread) WFLYCTL0013: Operation (\u0026#34;add\u0026#34;) failed - address: ([\n    (\u0026#34;core-service\u0026#34; =\u0026gt; \u0026#34;management\u0026#34;),\n    (\u0026#34;management-interface\u0026#34; =\u0026gt; \u0026#34;http-interface\u0026#34;)\n]) - failure description: {\n    \u0026#34;WFLYCTL0080: Failed services\u0026#34; =\u0026gt; {\u0026#34;org.wildfly.management.http.extensible\u0026#34; =\u0026gt; \u0026#34;java.net.BindException: Address already in use /127.0.0.1:9990\u0026#34;},\n    \u0026#34;WFLYCTL0288: One or more services were unable to start due to one or more indirect dependencies not being available.\u0026#34; =\u0026gt; {\n        \u0026#34;Services that were unable to start:\u0026#34; =\u0026gt; [\u0026#34;org.wildfly.management.http.extensible.shutdown\u0026#34;],\n        \u0026#34;Services that may be the cause:\u0026#34; =\u0026gt; [\u0026#34;jboss.remoting.remotingConnectorInfoService.http-remoting-connector\u0026#34;]\n    }\n}\u003c/code\u003e\u003c/pre\u003e\r\n  \u003c/figure\u003e\r\n\u003c/div\u003e\r\n\u003ch2 id=\"问题原因\"\u003e问题原因\u003c/h2\u003e\n\u003cp\u003e根据错误提示，端口被占用，原因是 keycloak 导出脚本也会启动 Wildfly 服务，默认的 http、https、management 等的端口已经被占用。\u003c/p\u003e","tags":[],"title":"Kubernetes中导入导出"},{"content":"MFA 即 Multi-Factor Authentication，多重身份认证，多因子认证，多因素认证。当然也包含等保要求中常说的双因子认证 2FA。\n常见的实现如 U 盾、短信、邮件、指纹识别、面部识别等，在账户+密码基础上，进行二次或多次认证，增强数据安全。\nKeycloak 提供了基于 OTP（One-Time Password，一次性密码，动态口令）的开箱即用的解决方案。\n使用步骤 直接上图看效果。\n各个 Realm 默认的浏览器认证流中，OTP 是CONDITIONAL，是一个条件可选项。 为用户配置启用 OTP 认证。 用户登录，未注册设备，要求注册设备。 手机端下载支持的 OTP 软件，如 FreeOTP，Google Authenticator。扫描注册，注册成功后就能看到已经生成一次性口令。 登录时就会要求输入一次性验证码。 注册成功后，可以在管理控制台看到用户注册的设备，用户也可以在自己的账户页面看到注册的设备。如果手机丢了想重新注册，把已有的记录删掉就可以，删掉后下次登录会要求重新注册。\n管理控制台: 自己的账户页面：\n扩展认证方式 如果想自己实现认证方式，官方也提供了详细的 SPI 开发指导，我们根据指导用一天时间实现了一个短信验证码。待开源。\n名字解释 OTP One-Time Password，一般翻译为一次性密码、动态口令、动态验证码。\nHOTP HMAC-based One-Time Password，使用计数方式基于 HMAC 算法加密。算法协议为 RFC 2104.\nTOTP Time-based One-Time Password，基于时间戳算法，是时间同步，基于客户端的动态口令和服务器的时间比对，一般每 N 秒产生一个新口令，要求客户端和服务器能够保持正确的时钟，客户端和服务端基于时间计算的动态口令才能一致。算法协议为 RFC 6238.\n开源实现\nFreeOTP。 Google Authenticator。 ","date":"2020-12-14","id":9,"permalink":"/docs/keycloak/security-features/mfa/","summary":"\u003cp\u003e\u003cstrong\u003eMFA\u003c/strong\u003e 即 Multi-Factor Authentication，多重身份认证，多因子认证，多因素认证。当然也包含等保要求中常说的双因子认证 2FA。\u003c/p\u003e\n\u003cp\u003e常见的实现如 U 盾、短信、邮件、指纹识别、面部识别等，在账户+密码基础上，进行二次或多次认证，增强数据安全。\u003c/p\u003e\n\u003cp\u003eKeycloak 提供了基于 OTP（One-Time Password，一次性密码，动态口令）的开箱即用的解决方案。\u003c/p\u003e\n\u003ch2 id=\"使用步骤\"\u003e使用步骤\u003c/h2\u003e\n\u003cp\u003e直接上图看效果。\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e各个 Realm 默认的浏览器认证流中，OTP 是\u003ccode\u003eCONDITIONAL\u003c/code\u003e，是一个条件可选项。\n\u003ca href=\"./browser-otp.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/keycloak/security-features/mfa/browser-otp_hu12120228026187848527.webp\"\r\n  width=\"1400\"\r\n  height=\"622\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"browser\"id=\"h-rh-i-0\"\r\n/\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e为用户配置启用 OTP 认证。\n\u003ca href=\"./required-otp.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/keycloak/security-features/mfa/required-otp_hu6593641579294950690.webp\"\r\n  width=\"799\"\r\n  height=\"702\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"User OTP\"id=\"h-rh-i-1\"\r\n/\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e用户登录，未注册设备，要求注册设备。\n\u003ca href=\"./register-otp.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/keycloak/security-features/mfa/register-otp_hu12669578073784448439.webp\"\r\n  width=\"701\"\r\n  height=\"901\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"Register\"id=\"h-rh-i-2\"\r\n/\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e手机端下载支持的 OTP 软件，如 FreeOTP，Google Authenticator。扫描注册，注册成功后就能看到已经生成一次性口令。\n\u003ca href=\"./freeotp.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/keycloak/security-features/mfa/freeotp_hu8655660619675262284.webp\"\r\n  width=\"631\"\r\n  height=\"582\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"FreeeOTP APP\"id=\"h-rh-i-3\"\r\n/\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e登录时就会要求输入一次性验证码。\n\u003ca href=\"./login-otp.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/keycloak/security-features/mfa/login-otp_hu6974089926450257796.webp\"\r\n  width=\"863\"\r\n  height=\"551\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"Login\"id=\"h-rh-i-4\"\r\n/\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e注册成功后，可以在管理控制台看到用户注册的设备，用户也可以在自己的账户页面看到注册的设备。如果手机丢了想重新注册，把已有的记录删掉就可以，删掉后下次登录会要求重新注册。\u003cbr\u003e\n管理控制台:\n\u003ca href=\"./admin-otp.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/keycloak/security-features/mfa/admin-otp_hu9166579955508478061.webp\"\r\n  width=\"1415\"\r\n  height=\"723\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"Admin OTP\"id=\"h-rh-i-5\"\r\n/\u003e\u003c/a\u003e\n自己的账户页面：\u003cbr\u003e\n\u003ca href=\"./account-otp.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/keycloak/security-features/mfa/account-otp_hu14173684843865636988.webp\"\r\n  width=\"1196\"\r\n  height=\"344\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"Account OTP\"id=\"h-rh-i-6\"\r\n/\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"扩展认证方式\"\u003e扩展认证方式\u003c/h2\u003e\n\u003cp\u003e如果想自己实现认证方式，官方也提供了详细的 SPI 开发指导，我们根据指导用一天时间实现了一个短信验证码。待开源。\u003c/p\u003e\n\u003ch2 id=\"名字解释\"\u003e名字解释\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eOTP\u003c/strong\u003e One-Time Password，一般翻译为一次性密码、动态口令、动态验证码。\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eHOTP\u003c/strong\u003e HMAC-based One-Time Password，使用计数方式基于 HMAC 算法加密。算法协议为 \u003ca href=\"https://tools.ietf.org/html/rfc2104\"\u003eRFC 2104\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e\u003cstrong\u003eTOTP\u003c/strong\u003e Time-based One-Time Password，基于时间戳算法，是时间同步，基于客户端的动态口令和服务器的时间比对，一般每 N 秒产生一个新口令，要求客户端和服务器能够保持正确的时钟，客户端和服务端基于时间计算的动态口令才能一致。算法协议为 \u003ca href=\"https://tools.ietf.org/html/rfc6238\"\u003eRFC 6238\u003c/a\u003e.\u003c/p\u003e\n\u003cp\u003e开源实现\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/freeotp\"\u003eFreeOTP\u003c/a\u003e。\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://github.com/google/google-authenticator\"\u003eGoogle Authenticator\u003c/a\u003e。\u003c/li\u003e\n\u003c/ul\u003e","tags":[],"title":"MFA-OTP"},{"content":"说明：此步骤仅仅是为了如何快速搭建起一个测试版 Windows AD 服务，不可用于生产。\n前置条件 安装 Windows AD 域控服务器，需要提前准备：\nWindows Server 2008 及更新版本操作系统，如 4 核 8G 内存，60G 硬盘的主机一台。 提前规划好域名，比如本示例为 iam.nxest.local. Windows Server 不同版本略有差异，但是基本要做的就是下面几项：\n启用功能：角色和功能里添加 Windows AD 域服务。 配置：配置 AD 域名、管理员密码等基本信息。 Windows Server 2012 步骤如下 点击开始菜单，找到“服务器管理器”，打开，显示如下界面。 点击右上角 管理\u0026gt;“添加角色和功能”按钮，弹出如下界面。 选择“基于角色或基于功能的安装”，然后点“下一步”。 服务器选择这里选择默认的，假如你需要针对其它主机安装 AD 角色，这里可以选择你需要的主机，点击“下一步”。 这里勾选“Active Directory 域服务”。 当勾选这个选项时，会弹出对话框，点“添加功能”，在功能这个选项卡直接点下一步，一直下一步直到最后一步点击安装。 安装成功后我们点击“关闭”，但这还没有完全安装成功，还需要继续配置。点击服务器右上角的“功能按钮”, 弹出继续配置 AD 的对话框。 根据提示，添加新林，输入准备好的域名。 林功能级别选择最高的版本。 输入 NetBIOS 域名，都是简称，一般是你准备的域名的第一位。 下一步，默认即可。\n下一步，先决条件检查，可能花费 10 分钟左右，请耐心等待。 检查通过后才能点击安装。 安装完成后，会提示注销重启，如果未提示重启，请手动重启下服务器。 用户管理 安装完成后，可通过“Active Directory 用户和计算机”管理用户。此功能可通过控制面板或菜单搜索到。\n打开后即可在 Users 下右键创建组和用户，请根据需要提前划分分组，增加用户。\n","date":"2020-12-14","id":10,"permalink":"/docs/references/windows-ad/","summary":"\u003cp\u003e说明：此步骤仅仅是为了如何快速搭建起一个测试版 Windows AD 服务，不可用于生产。\u003c/p\u003e\n\u003ch2 id=\"前置条件\"\u003e前置条件\u003c/h2\u003e\n\u003cp\u003e安装 Windows AD 域控服务器，需要提前准备：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003eWindows Server 2008 及更新版本操作系统，如 4 核 8G 内存，60G 硬盘的主机一台。\u003c/li\u003e\n\u003cli\u003e提前规划好域名，比如本示例为 iam.nxest.local.\u003c/li\u003e\n\u003c/ol\u003e\n\u003cp\u003eWindows Server 不同版本略有差异，但是基本要做的就是下面几项：\u003c/p\u003e\n\u003col\u003e\n\u003cli\u003e启用功能：角色和功能里添加 Windows AD 域服务。\u003c/li\u003e\n\u003cli\u003e配置：配置 AD 域名、管理员密码等基本信息。\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"windows-server-2012-步骤如下\"\u003eWindows Server 2012 步骤如下\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e点击开始菜单，找到“服务器管理器”，打开，显示如下界面。\n\u003ca href=\"./ad-001.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/references/windows-ad/ad-001_hu2885924325126620244.webp\"\r\n  width=\"764\"\r\n  height=\"499\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"AD\"id=\"h-rh-i-0\"\r\n/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e点击右上角 管理\u0026gt;“添加角色和功能”按钮，弹出如下界面。\n\u003ca href=\"./ad-002.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/references/windows-ad/ad-002_hu2779803820000959365.webp\"\r\n  width=\"1466\"\r\n  height=\"729\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"AD\"id=\"h-rh-i-1\"\r\n/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e选择“基于角色或基于功能的安装”，然后点“下一步”。\n\u003ca href=\"./ad-003.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/references/windows-ad/ad-003_hu15787995524625310584.webp\"\r\n  width=\"1192\"\r\n  height=\"834\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"AD\"id=\"h-rh-i-2\"\r\n/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e服务器选择这里选择默认的，假如你需要针对其它主机安装 AD 角色，这里可以选择你需要的主机，点击“下一步”。\n\u003ca href=\"./ad-004.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/references/windows-ad/ad-004_hu16351046052913653848.webp\"\r\n  width=\"1194\"\r\n  height=\"838\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"AD\"id=\"h-rh-i-3\"\r\n/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e这里勾选“Active Directory 域服务”。\n\u003ca href=\"./ad-005.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/references/windows-ad/ad-005_hu12978229761743645565.webp\"\r\n  width=\"1185\"\r\n  height=\"835\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"AD\"id=\"h-rh-i-4\"\r\n/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e当勾选这个选项时，会弹出对话框，点“添加功能”，在功能这个选项卡直接点下一步，一直下一步直到最后一步点击安装。\n\u003ca href=\"./ad-006.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/references/windows-ad/ad-006_hu8847225282935321592.webp\"\r\n  width=\"1197\"\r\n  height=\"828\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"AD\"id=\"h-rh-i-5\"\r\n/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e安装成功后我们点击“关闭”，但这还没有完全安装成功，还需要继续配置。点击服务器右上角的“功能按钮”, 弹出继续配置 AD 的对话框。\n\u003ca href=\"./ad-007.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/references/windows-ad/ad-007_hu5783537646947793504.webp\"\r\n  width=\"1459\"\r\n  height=\"741\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"AD\"id=\"h-rh-i-6\"\r\n/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e根据提示，添加新林，输入准备好的域名。\n\u003ca href=\"./ad-008.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/references/windows-ad/ad-008_hu11771723065931555645.webp\"\r\n  width=\"1157\"\r\n  height=\"829\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"AD\"id=\"h-rh-i-7\"\r\n/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e林功能级别选择最高的版本。\n\u003ca href=\"./ad-009.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/references/windows-ad/ad-009_hu12197180797476366321.webp\"\r\n  width=\"1167\"\r\n  height=\"825\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"AD\"id=\"h-rh-i-8\"\r\n/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e输入 NetBIOS 域名，都是简称，一般是你准备的域名的第一位。\n\u003ca href=\"./ad-010.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/references/windows-ad/ad-010_hu16135420283361101531.webp\"\r\n  width=\"1143\"\r\n  height=\"826\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"AD\"id=\"h-rh-i-9\"\r\n/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e下一步，默认即可。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e下一步，先决条件检查，可能花费 10 分钟左右，请耐心等待。\n\u003ca href=\"./ad-012.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/references/windows-ad/ad-012_hu15276944811886404499.webp\"\r\n  width=\"1173\"\r\n  height=\"834\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"AD\"id=\"h-rh-i-10\"\r\n/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e检查通过后才能点击安装。\n\u003ca href=\"./ad-013.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/references/windows-ad/ad-013_hu8239216188876857895.webp\"\r\n  width=\"1164\"\r\n  height=\"826\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"AD\"id=\"h-rh-i-11\"\r\n/\u003e\u003c/a\u003e\u003c/p\u003e","tags":[],"title":"安装AD域服务并启用LDAPS"},{"content":"密码策略，常见的如密码最小长度、必须包含特殊字符、密码不能与历史密码相同等。控制用户在修改密码时，新密码必须满足一定的条件，从而增强密码安全。\nKeycloak 内置了丰富的密码策略，满足常用的需求，不过默认都是不启用的，需要管理员主动设置。\n启用方式，单击 Authentication 菜单，选择 Password Policy 选项卡。 在右侧下拉列表框中选择要添加的策略。根据策略提示设置不同的参数，保存。\n密码策略只对新创建用户，或者用户修改密码生效，对已有用户不生效。如果想更快生效，就强制用户必须修改密码，在用户的 Required User Actions 里增加 Update Password 。\n密码策略类型 HashAlgorithm\n哈希算法，密码加密算法，以此算法存储，可根据官方指导自己实现算法。\nHashing Iterations\n哈希次数，指定密码在存储或验证之前被哈希的次数。 多次哈希防止数据库泄露后，密码被暴力破解。哈希次数越多安全性越高，性能越差。\nMinimum Length\n密码最小长度。加大密码长度才是最有效的安全措施，什么大小写数字都是骗人的。\nDigits\n密码里必须包含 N 个数字。\nLowercase Characters\n密码里必须包含 N 个小写字母。\nUppercase Characters\n密码里必须包含 N 个大写字母。\nSpecial Characters\n密码里必须包含 N 个特殊字符，特殊字符如 ?!#%$ 。\nNot Username\n不能是当前用户名。\nNot Email\n不能是当前用户的邮箱。\nRegular Expression\n正则表达式，用 java.util.regex.Pattern 解析。\nExpire Password\n密码有效期，过期时间， N 天。超过这个时间后，用户必须修改密码。\nNot Recently Used\n密码历史，不能是最近使用过的 N 个密码。\nPassword Blacklist\n密码黑名单，比如不能是常见的 admin,test,123456 等等，通过文件定制黑名单列表。\n","date":"2020-12-14","id":11,"permalink":"/docs/keycloak/security-features/password-policies/","summary":"\u003cp\u003e密码策略，常见的如密码最小长度、必须包含特殊字符、密码不能与历史密码相同等。控制用户在修改密码时，新密码必须满足一定的条件，从而增强密码安全。\u003c/p\u003e\n\u003cp\u003eKeycloak 内置了丰富的密码策略，满足常用的需求，不过默认都是不启用的，需要管理员主动设置。\u003c/p\u003e\n\u003cp\u003e启用方式，单击 \u003ccode\u003eAuthentication\u003c/code\u003e 菜单，选择 \u003ccode\u003ePassword Policy\u003c/code\u003e 选项卡。 在右侧下拉列表框中选择要添加的策略。根据策略提示设置不同的参数，保存。\u003c/p\u003e\n\u003cp\u003e密码策略只对新创建用户，或者用户修改密码生效，对已有用户不生效。如果想更快生效，就强制用户必须修改密码，在用户的 \u003ccode\u003eRequired User Actions\u003c/code\u003e 里增加 \u003ccode\u003eUpdate Password\u003c/code\u003e 。\u003c/p\u003e\n\u003ch2 id=\"密码策略类型\"\u003e密码策略类型\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eHashAlgorithm\u003c/p\u003e\n\u003cp\u003e哈希算法，密码加密算法，以此算法存储，可根据官方指导自己实现算法。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eHashing Iterations\u003c/p\u003e\n\u003cp\u003e哈希次数，指定密码在存储或验证之前被哈希的次数。\n多次哈希防止数据库泄露后，密码被暴力破解。哈希次数越多安全性越高，性能越差。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMinimum Length\u003c/p\u003e\n\u003cp\u003e密码最小长度。加大密码长度才是最有效的安全措施，什么大小写数字都是骗人的。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eDigits\u003c/p\u003e\n\u003cp\u003e密码里必须包含 N 个数字。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eLowercase Characters\u003c/p\u003e\n\u003cp\u003e密码里必须包含 N 个小写字母。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUppercase Characters\u003c/p\u003e\n\u003cp\u003e密码里必须包含 N 个大写字母。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eSpecial Characters\u003c/p\u003e\n\u003cp\u003e密码里必须包含 N 个特殊字符，特殊字符如 \u003ccode\u003e?!#%$\u003c/code\u003e 。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eNot Username\u003c/p\u003e\n\u003cp\u003e不能是当前用户名。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eNot Email\u003c/p\u003e\n\u003cp\u003e不能是当前用户的邮箱。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRegular Expression\u003c/p\u003e\n\u003cp\u003e正则表达式，用 \u003ccode\u003ejava.util.regex.Pattern\u003c/code\u003e 解析。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eExpire Password\u003c/p\u003e\n\u003cp\u003e密码有效期，过期时间， N 天。超过这个时间后，用户必须修改密码。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eNot Recently Used\u003c/p\u003e\n\u003cp\u003e密码历史，不能是最近使用过的 N 个密码。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003ePassword Blacklist\u003c/p\u003e","tags":[],"title":"密码策略"},{"content":"问题描述 以 Http 方式登录，页面错误提示如下。\nWe're sorry... HTTPS required.\n问题原因 keycloak 各个 Realm 默认的登录设置里，Require SSL 为 external requests，对于外部请求，必须是 Https。 非外部请求，也就是私有地址，可以是 http，如：localhost, 127.0.0.1, 10.x.x.x, 192.168.x.x, 172.16.x.x。 详细参考官方文档说明。\n解决方案 配置 https 并使用 https 登录，毫无疑问，这是正确的解决方案。\n如果只是测试环境，可以修改 Realm 的设置，Require SSL 改为 none。\n修改数据方式\nupdate REALM set ssl_required=\u0026#39;NONE\u0026#39; where id = \u0026#39;master\u0026#39;;\rK8S 命令行调用 keycloak 官方 admin 工具 kcadm 修改\n# login with a admin user kubectl exec -it keycloak-pod -- /opt/jboss/keycloak/bin/kcadm.sh config credentials --server http://localhost:8080/auth --realm master --user admin --password admin-password # update your realm config kubectl exec -it keycloak-pod -- /opt/jboss/keycloak/bin/kcadm.sh update realms/master -s sslRequired=none\r","date":"2020-12-10","id":12,"permalink":"/docs/keycloak/troubleshooting/https-required/","summary":"\u003ch2 id=\"问题描述\"\u003e问题描述\u003c/h2\u003e\n\u003cp\u003e以 Http 方式登录，页面错误提示如下。\u003c/p\u003e\n\u003cp\u003e\u003ccode\u003eWe're sorry... HTTPS required.\u003c/code\u003e\u003c/p\u003e\n\u003ch2 id=\"问题原因\"\u003e问题原因\u003c/h2\u003e\n\u003cp\u003ekeycloak 各个 Realm 默认的登录设置里，\u003ccode\u003eRequire SSL\u003c/code\u003e 为 \u003ccode\u003eexternal requests\u003c/code\u003e，对于外部请求，必须是 Https。\n非外部请求，也就是私有地址，可以是 http，如：\u003ccode\u003elocalhost, 127.0.0.1, 10.x.x.x, 192.168.x.x, 172.16.x.x\u003c/code\u003e。\n详细参考\u003ca href=\"https://www.keycloak.org/docs/latest/server_installation/index.html#setting-up-https-ssl\"\u003e官方文档说明\u003c/a\u003e。\u003c/p\u003e\n\u003ch2 id=\"解决方案\"\u003e解决方案\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e配置 https 并使用 https 登录，毫无疑问，这是正确的解决方案。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e如果只是测试环境，可以修改 Realm 的设置，\u003ccode\u003eRequire SSL\u003c/code\u003e 改为 \u003ccode\u003enone\u003c/code\u003e。\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e修改数据方式\u003c/p\u003e\n\r\n\r\n\r\n\u003cdiv class=\"expressive-code\"\u003e\r\n  \u003cfigure class=\"frame not-content\"\u003e\r\n  \u003cfigcaption class=\"header\"\u003e\r\n    \u003cspan class=\"title\"\u003e\u003c/span\u003e\r\n  \u003c/figcaption\u003e\r\n  \u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-sql\" data-lang=\"sql\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"k\"\u003eupdate\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eREALM\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003eset\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003essl_required\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;NONE\u0026#39;\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"k\"\u003ewhere\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"n\"\u003eid\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"w\"\u003e \u003c/span\u003e\u003cspan class=\"s1\"\u003e\u0026#39;master\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\r\n  \u003c/figure\u003e\r\n\u003c/div\u003e\r\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eK8S 命令行调用 keycloak 官方 admin 工具 kcadm 修改\u003c/p\u003e\n\r\n\r\n\r\n\u003cdiv class=\"expressive-code\"\u003e\r\n  \u003cfigure class=\"frame is-terminal not-content\"\u003e\r\n  \u003cfigcaption class=\"header\"\u003e\r\n    \u003cspan class=\"title\"\u003e\u003c/span\u003e\r\n  \u003c/figcaption\u003e\r\n  \u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# login with a admin user\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ekubectl \u003cspan class=\"nb\"\u003eexec\u003c/span\u003e -it keycloak-pod -- /opt/jboss/keycloak/bin/kcadm.sh config credentials --server http://localhost:8080/auth --realm master --user admin --password admin-password\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# update your realm config\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ekubectl \u003cspan class=\"nb\"\u003eexec\u003c/span\u003e -it keycloak-pod -- /opt/jboss/keycloak/bin/kcadm.sh update realms/master -s \u003cspan class=\"nv\"\u003esslRequired\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003enone\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\r\n  \u003c/figure\u003e\r\n\u003c/div\u003e\r\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003c/ol\u003e","tags":[],"title":"Https Required"},{"content":"问题描述 Keycloak 对接的是一个 MGR(mysql group replication)的集群，安装时出错，数据初始化失败。\n查看 keycloak 启动日志，错误信息大致如下。\nINFO [org.keycloak.connections.jpa.updater.liquibase.LiquibaseJpaUpdaterProvider] (ServerService Thread Pool -- 66) Initializing database schema. Using changelog META-INF/jpa-changelog-master.xml ERROR [org.keycloak.connections.jpa.updater.liquibase.conn.DefaultLiquibaseConnectionProvider] (ServerService Thread Pool -- 66) Change Set META-INF/jpa-changelog-1.0.0.Final.xml:: 1.0.0.Final-KEYCLOAK-5461::sthorger@redhat.com failed. Error: Table \u0026#39;APPLICATION_DEFAULT_ROLES\u0026#39; already exists [Failed SQL: CREATE TABLE keycloak.APPLICATION_DEFAULT_ROLES (APPLICATION_ID VARCHAR(36) NOT NULL, ROLE_ID VARCHAR(36) NOT NULL)] FATAL [org.keycloak.services] (ServerService Thread Pool -- 66) java.lang.RuntimeException: Failed to update database INFO [org.jboss.as.server] (Thread-2) WFLYSRV0220: Server shutdown has been requested via an OS signal\r查看 MySQL 日志，看到如下错误。\n[ERROR] Plugin group_replication reported: \u0026#39;Table DATABASECHANGELOG does not have any PRIMARY KEY. This is not compatible with Group Replication\u0026#39;\r问题原因 根据 MySQL 日志，很明确了是因为 DATABASECHANGELOG 没有主键。MySQL group replication 要求表必须有主键或者非 Null 的唯一索引。\nkeycloak 使用 Liquibase 初始化数据。Liquibase 自动创建的 DATABASECHANGELOG 表没有主键，主要是为了避免特定数据库 key 的长度限制。查看 Liquibase 官方说明，“id”, “author”, “filename”可以作为唯一索引。\n解决方案 解决办法也很简单，在 keycloak 启动之前，提前创建好 DATABASECHANGELOG 表并增加主键（或唯一性索引）。\nCREATE TABLE `DATABASECHANGELOG` ( `ID` varchar(255) NOT NULL, `AUTHOR` varchar(255) NOT NULL, `FILENAME` varchar(255) NOT NULL, `DATEEXECUTED` datetime NOT NULL, `ORDEREXECUTED` int(11) NOT NULL, `EXECTYPE` varchar(10) NOT NULL, `MD5SUM` varchar(35) DEFAULT NULL, `DESCRIPTION` varchar(255) DEFAULT NULL, `COMMENTS` varchar(255) DEFAULT NULL, `TAG` varchar(255) DEFAULT NULL, `LIQUIBASE` varchar(20) DEFAULT NULL, `CONTEXTS` varchar(255) DEFAULT NULL, `LABELS` varchar(255) DEFAULT NULL, `DEPLOYMENT_ID` varchar(10) DEFAULT NULL, PRIMARY KEY (`ID`,`AUTHOR`,`FILENAME`) ) ENGINE=InnoDB DEFAULT CHARSET=utf8;\r","date":"2020-12-08","id":13,"permalink":"/docs/keycloak/troubleshooting/liquibase-mysql-group-replication/","summary":"\u003ch2 id=\"问题描述\"\u003e问题描述\u003c/h2\u003e\n\u003cp\u003eKeycloak 对接的是一个 MGR(mysql group replication)的集群，安装时出错，数据初始化失败。\u003c/p\u003e\n\u003cp\u003e查看 keycloak 启动日志，错误信息大致如下。\u003c/p\u003e\n\r\n\r\n\r\n\u003cdiv class=\"expressive-code\"\u003e\r\n  \u003cfigure class=\"frame not-content\"\u003e\r\n  \u003cfigcaption class=\"header\"\u003e\r\n    \u003cspan class=\"title\"\u003e\u003c/span\u003e\r\n  \u003c/figcaption\u003e\r\n  \u003cpre tabindex=\"0\"\u003e\u003ccode class=\"language-log\" data-lang=\"log\"\u003eINFO  [org.keycloak.connections.jpa.updater.liquibase.LiquibaseJpaUpdaterProvider] (ServerService Thread Pool -- 66) Initializing database schema. Using changelog META-INF/jpa-changelog-master.xml\nERROR [org.keycloak.connections.jpa.updater.liquibase.conn.DefaultLiquibaseConnectionProvider] (ServerService Thread Pool -- 66) Change Set META-INF/jpa-changelog-1.0.0.Final.xml::\n1.0.0.Final-KEYCLOAK-5461::sthorger@redhat.com failed.  Error: Table \u0026#39;APPLICATION_DEFAULT_ROLES\u0026#39; already exists [Failed SQL: CREATE TABLE keycloak.APPLICATION_DEFAULT_ROLES (APPLICATION_ID VARCHAR(36) NOT NULL, ROLE_ID VARCHAR(36) NOT NULL)]\nFATAL [org.keycloak.services] (ServerService Thread Pool -- 66) java.lang.RuntimeException: Failed to update database\nINFO  [org.jboss.as.server] (Thread-2) WFLYSRV0220: Server shutdown has been requested via an OS signal\u003c/code\u003e\u003c/pre\u003e\r\n  \u003c/figure\u003e\r\n\u003c/div\u003e\r\n\u003cp\u003e查看 MySQL 日志，看到如下错误。\u003c/p\u003e","tags":[],"title":"Liquibase MGR"},{"content":"","date":"2020-12-04","id":14,"permalink":"/docs/keycloak/troubleshooting/","summary":"","tags":[],"title":"Troubleshooting"},{"content":"","date":"2020-12-04","id":15,"permalink":"/docs/keycloak/security-features/","summary":"","tags":[],"title":"安全增强功能"},{"content":"Brute Force Detection 暴力检测，防止密码暴力破解，登录失败 N 次锁定。\n启用暴力检测 控制台选择 Realm，设置：Realm Settings -\u0026gt; Security Defenses -\u0026gt; Brute Force Detection。\nPermanent Lockout\nON 表示永久锁定。\nOFF 表示临时锁定。\nMax Login Failures\n登录失败达到多少次时，锁定账号。\nQuick Login Check Milli Seconds\n快速登录检测，两次登录请求之间的时间间隔（单位毫秒）小于该值时，则认定为快速登录。\nMinimum Quick Login Wait\n一旦被认定为快速登录，该账号将被临时锁定为该配置项配置的时长。\n解除锁定 临时锁定用户，达到锁定时长后，会自动解锁。\n管理员在用户列表或用户详情里可以手动解锁。\n注意事项 失败次数统计仅与登录账号相关，与会话无关，关闭重启浏览器，次数不会重置。 用户锁定后，给出的错误提示还是默认的用户名密码错误，就是不想让攻击者知道用户暂时被禁用了。 ","date":"2020-12-04","id":16,"permalink":"/docs/keycloak/security-features/brute-force-detection/","summary":"\u003cp\u003eBrute Force Detection 暴力检测，防止密码暴力破解，登录失败 N 次锁定。\u003c/p\u003e\n\u003ch2 id=\"启用暴力检测\"\u003e启用暴力检测\u003c/h2\u003e\n\u003cp\u003e控制台选择 Realm，设置：Realm Settings -\u0026gt; Security Defenses -\u0026gt; Brute Force Detection。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"./brute-force.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/keycloak/security-features/brute-force-detection/brute-force_hu7739500571624549538.webp\"\r\n  width=\"1108\"\r\n  height=\"667\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"Brute Force Detection\"id=\"h-rh-i-0\"\r\n/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003ePermanent Lockout\u003c/p\u003e\n\u003cp\u003eON 表示永久锁定。\u003cbr\u003e\nOFF 表示临时锁定。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMax Login Failures\u003c/p\u003e\n\u003cp\u003e登录失败达到多少次时，锁定账号。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eQuick Login Check Milli Seconds\u003c/p\u003e\n\u003cp\u003e快速登录检测，两次登录请求之间的时间间隔（单位毫秒）小于该值时，则认定为快速登录。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eMinimum Quick Login Wait\u003c/p\u003e\n\u003cp\u003e一旦被认定为快速登录，该账号将被临时锁定为该配置项配置的时长。\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"解除锁定\"\u003e解除锁定\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e\n\u003cp\u003e临时锁定用户，达到锁定时长后，会自动解锁。\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e管理员在用户列表或用户详情里可以手动解锁。\u003c/p\u003e\n\u003cp\u003e\u003ca href=\"./unlock-user.png\"\u003e\r\n\r\n\u003cimg\r\n  src=\"/docs/keycloak/security-features/brute-force-detection/unlock-user_hu16307795136657189630.webp\"\r\n  width=\"1144\"\r\n  height=\"787\"\r\n  decoding=\"async\"\r\n  fetchpriority=\"auto\"\r\n  loading=\"lazy\"\r\n  alt=\"解除锁定\"id=\"h-rh-i-1\"\r\n/\u003e\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ol\u003e\n\u003ch2 id=\"注意事项\"\u003e注意事项\u003c/h2\u003e\n\u003col\u003e\n\u003cli\u003e失败次数统计仅与登录账号相关，与会话无关，关闭重启浏览器，次数不会重置。\u003c/li\u003e\n\u003cli\u003e用户锁定后，给出的错误提示还是默认的用户名密码错误，就是不想让攻击者知道用户暂时被禁用了。\u003c/li\u003e\n\u003c/ol\u003e","tags":[],"title":"暴力检测"},{"content":"","date":"0001-01-01","id":17,"permalink":"/docs/keycloak/admin-api/","summary":"","tags":[],"title":"Admin API"},{"content":"","date":"0001-01-01","id":18,"permalink":"/categories/","summary":"","tags":[],"title":"Categories"},{"content":"","date":"0001-01-01","id":19,"permalink":"/contributors/","summary":"","tags":[],"title":"Contributors"},{"content":"","date":"0001-01-01","id":20,"permalink":"/tags/","summary":"","tags":[],"title":"Tags"},{"content":"Keycloak Admin REST API，curl 模拟用户增加修改删除的完整例子。\n#!/bin/bash HOST_IP=127.0.0.1 HOST_NAME=keycloak.example DEFAULT_REALM=master ADMIN_API_URL=http://${HOST_IP}/auth/admin/realms/${DEFAULT_REALM} USER_API_URL=${ADMIN_API_URL}/users # admin user ADMIN_NAME=xxx ADMIN_PWD=xxx parse_json() { echo \u0026#34;${1//\\\u0026#34;/}\u0026#34; | sed \u0026#34;s/.*$2:\\([^,}]*\\).*/\\1/\u0026#34; } echo \u0026#34;====Begin test user CRUD====\u0026#34; token_url=http://${HOST_IP}/auth/realms/${DEFAULT_REALM}/protocol/openid-connect/token # Get token, a json token_json=$(curl -X POST \\ -H \u0026#34;host:${HOST_NAME}\u0026#34; \\ -H \u0026#34;Content-Type: application/x-www-form-urlencoded\u0026#34; \\ ${token_url} \\ --data \u0026#39;grant_type=password\u0026#39; \\ --data \u0026#39;client_id=admin-cli\u0026#39; \\ --data \u0026#34;username=${ADMIN_NAME}\u0026#34; \\ --data \u0026#34;password=${ADMIN_PWD}\u0026#34;) # get the `access_token` from the json token=$(parse_json \u0026#34;$token_json\u0026#34; \u0026#34;access_token\u0026#34;) # List users curl -X GET -H \u0026#34;Authorization: Bearer ${token}\u0026#34; \\ -H \u0026#34;host:${HOST_NAME}\u0026#34; \\ ${USER_API_URL} -v # Add new user username=usertest$(date \u0026#34;+%Y%m%d%H%M%S%s\u0026#34;) user={\\\u0026#34;enabled\\\u0026#34;:true,\\\u0026#34;attributes\\\u0026#34;:{},\\\u0026#34;username\\\u0026#34;:\\\u0026#34;${username}\\\u0026#34;,\\\u0026#34;emailVerified\\\u0026#34;:\\\u0026#34;\\\u0026#34;} echo \u0026#34;Begin create new user ${username}.\u0026#34; user_create_rsp=$(curl -i -s -H \u0026#34;Authorization: Bearer ${token}\u0026#34; \\ -H \u0026#34;host:${HOST_NAME}\u0026#34; \\ -H \u0026#34;Content-Type: application/json\u0026#34; \\ --data \u0026#34;${user}\u0026#34; \\ ${USER_API_URL} --stderr -) # Get user id full url from response header `Location` # \u0026lt; Location: http://xxxx/users/9e901054-bbc7-47db-8a68-4a13474a1080 # The `tr -d` is to fix `Error curl: (3) URL using bad/illegal format or missing URL` user_id_url=$(echo \u0026#34;${user_create_rsp}\u0026#34; | grep -Fi Location | tr -d \u0026#39;\\r\u0026#39; | awk \u0026#39;{print $2}\u0026#39;) # Get only the id from the url user_id=$(echo ${user_id_url} | awk -F\u0026#39;/\u0026#39; \u0026#39;{print $NF}\u0026#39;) echo \u0026#34;User id is ${user_id} .\u0026#34; # Delete user by id curl -X DELETE -H \u0026#34;Authorization: Bearer ${token}\u0026#34; \\ -H \u0026#34;host:${HOST_NAME}\u0026#34; \\ -H \u0026#34;Content-Type: application/json\u0026#34; \\ \u0026#34;${USER_API_URL}/${user_id}\u0026#34; echo \u0026#34;====End test user CRUD====\u0026#34;\r","date":"0001-01-01","id":21,"permalink":"/docs/keycloak/admin-api/user-end2end/","summary":"\u003cp\u003eKeycloak Admin REST API，curl 模拟用户增加修改删除的完整例子。\u003c/p\u003e\n\r\n\r\n\r\n\u003cdiv class=\"expressive-code\"\u003e\r\n  \u003cfigure class=\"frame is-terminal not-content\"\u003e\r\n  \u003cfigcaption class=\"header\"\u003e\r\n    \u003cspan class=\"title\"\u003e\u003c/span\u003e\r\n  \u003c/figcaption\u003e\r\n  \u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e#!/bin/bash\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"cp\"\u003e\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003eHOST_IP\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e127.0.0.1\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003eHOST_NAME\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ekeycloak.example\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003eDEFAULT_REALM\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003emaster\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003eADMIN_API_URL\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ehttp://\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eHOST_IP\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/auth/admin/realms/\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eDEFAULT_REALM\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003eUSER_API_URL\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eADMIN_API_URL\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/users\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# admin user\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003eADMIN_NAME\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003exxx\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003eADMIN_PWD\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003exxx\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eparse_json\u003cspan class=\"o\"\u003e()\u003c/span\u003e \u003cspan class=\"o\"\u003e{\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e \u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e//\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e/\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e sed \u003cspan class=\"s2\"\u003e\u0026#34;s/.*\u003c/span\u003e\u003cspan class=\"nv\"\u003e$2\u003c/span\u003e\u003cspan class=\"s2\"\u003e:\\([^,}]*\\).*/\\1/\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;====Begin test user CRUD====\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003etoken_url\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003ehttp://\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eHOST_IP\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/auth/realms/\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eDEFAULT_REALM\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e/protocol/openid-connect/token\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Get token, a json\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003etoken_json\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003ecurl -X POST \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e -H \u003cspan class=\"s2\"\u003e\u0026#34;host:\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eHOST_NAME\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e -H \u003cspan class=\"s2\"\u003e\u0026#34;Content-Type: application/x-www-form-urlencoded\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003etoken_url\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e --data \u003cspan class=\"s1\"\u003e\u0026#39;grant_type=password\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e --data \u003cspan class=\"s1\"\u003e\u0026#39;client_id=admin-cli\u0026#39;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e --data \u003cspan class=\"s2\"\u003e\u0026#34;username=\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eADMIN_NAME\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e --data \u003cspan class=\"s2\"\u003e\u0026#34;password=\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eADMIN_PWD\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"k\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# get the `access_token` from the json\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003etoken\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003eparse_json \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"nv\"\u003e$token_json\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;access_token\u0026#34;\u003c/span\u003e\u003cspan class=\"k\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# List users\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecurl -X GET -H \u003cspan class=\"s2\"\u003e\u0026#34;Authorization: Bearer \u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003etoken\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e -H \u003cspan class=\"s2\"\u003e\u0026#34;host:\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eHOST_NAME\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eUSER_API_URL\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e -v\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Add new user\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eusertest\u003cspan class=\"k\"\u003e$(\u003c/span\u003edate \u003cspan class=\"s2\"\u003e\u0026#34;+%Y%m%d%H%M%S%s\u0026#34;\u003c/span\u003e\u003cspan class=\"k\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003euser\u003c/span\u003e\u003cspan class=\"o\"\u003e={\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003eenabled\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e:true,\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003eattributes\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e:\u003cspan class=\"o\"\u003e{}\u003c/span\u003e,\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003eusername\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e:\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e,\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003eemailVerified\u003cspan class=\"se\"\u003e\\\u0026#34;\u003c/span\u003e:\u003cspan class=\"se\"\u003e\\\u0026#34;\\\u0026#34;\u003c/span\u003e\u003cspan class=\"o\"\u003e}\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;Begin create new user \u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eusername\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e.\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003euser_create_rsp\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003ecurl -i -s -H \u003cspan class=\"s2\"\u003e\u0026#34;Authorization: Bearer \u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003etoken\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e -H \u003cspan class=\"s2\"\u003e\u0026#34;host:\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eHOST_NAME\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e -H \u003cspan class=\"s2\"\u003e\u0026#34;Content-Type: application/json\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e --data \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003euser\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eUSER_API_URL\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e --stderr -\u003cspan class=\"k\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Get user id full url from response header `Location`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# \u0026lt; Location: http://xxxx/users/9e901054-bbc7-47db-8a68-4a13474a1080\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# The `tr -d` is to fix `Error curl: (3) URL using bad/illegal format or missing URL`\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003euser_id_url\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003euser_create_rsp\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e grep -Fi Location \u003cspan class=\"p\"\u003e|\u003c/span\u003e tr -d \u003cspan class=\"s1\"\u003e\u0026#39;\\r\u0026#39;\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e awk \u003cspan class=\"s1\"\u003e\u0026#39;{print $2}\u0026#39;\u003c/span\u003e\u003cspan class=\"k\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Get only the id from the url\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nv\"\u003euser_id\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e\u003cspan class=\"k\"\u003e$(\u003c/span\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003euser_id_url\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e \u003cspan class=\"p\"\u003e|\u003c/span\u003e awk -F\u003cspan class=\"s1\"\u003e\u0026#39;/\u0026#39;\u003c/span\u003e \u003cspan class=\"s1\"\u003e\u0026#39;{print $NF}\u0026#39;\u003c/span\u003e\u003cspan class=\"k\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;User id is \u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003euser_id\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e .\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e# Delete user by id\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecurl -X DELETE -H \u003cspan class=\"s2\"\u003e\u0026#34;Authorization: Bearer \u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003etoken\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e -H \u003cspan class=\"s2\"\u003e\u0026#34;host:\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eHOST_NAME\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e -H \u003cspan class=\"s2\"\u003e\u0026#34;Content-Type: application/json\u0026#34;\u003c/span\u003e \u003cspan class=\"se\"\u003e\\\n\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"se\"\u003e\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003eUSER_API_URL\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e/\u003c/span\u003e\u003cspan class=\"si\"\u003e${\u003c/span\u003e\u003cspan class=\"nv\"\u003euser_id\u003c/span\u003e\u003cspan class=\"si\"\u003e}\u003c/span\u003e\u003cspan class=\"s2\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003eecho\u003c/span\u003e \u003cspan class=\"s2\"\u003e\u0026#34;====End test user CRUD====\u0026#34;\u003c/span\u003e\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\r\n  \u003c/figure\u003e\r\n\u003c/div\u003e","tags":[],"title":"用户增删改查"}]