<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>安全增强功能 on IDaaS Book</title><link>https://idaas.xlabs.club/docs/keycloak/security-features/</link><description>Recent content in 安全增强功能 on IDaaS Book</description><generator>Hugo</generator><language>zh</language><copyright>Copyright (c) 2020-2024 xlabs.club</copyright><lastBuildDate>Wed, 25 Sep 2024 23:34:37 +0800</lastBuildDate><atom:link href="https://idaas.xlabs.club/docs/keycloak/security-features/index.xml" rel="self" type="application/rss+xml"/><item><title>MFA-OTP</title><link>https://idaas.xlabs.club/docs/keycloak/security-features/mfa/</link><pubDate>Mon, 14 Dec 2020 23:54:37 +0800</pubDate><guid>https://idaas.xlabs.club/docs/keycloak/security-features/mfa/</guid><description>&lt;p>&lt;strong>MFA&lt;/strong> 即 Multi-Factor Authentication，多重身份认证，多因子认证，多因素认证。当然也包含等保要求中常说的双因子认证 2FA。&lt;/p>
&lt;p>常见的实现如 U 盾、短信、邮件、指纹识别、面部识别等，在账户+密码基础上，进行二次或多次认证，增强数据安全。&lt;/p>
&lt;p>Keycloak 提供了基于 OTP（One-Time Password，一次性密码，动态口令）的开箱即用的解决方案。&lt;/p>
&lt;h2 id="使用步骤">使用步骤&lt;/h2>
&lt;p>直接上图看效果。&lt;/p>
&lt;ol>
&lt;li>各个 Realm 默认的浏览器认证流中，OTP 是&lt;code>CONDITIONAL&lt;/code>，是一个条件可选项。
&lt;a href="./browser-otp.png">

&lt;img
 src="https://idaas.xlabs.club/docs/keycloak/security-features/mfa/browser-otp_hu12120228026187848527.webp"
 width="1400"
 height="622"
 decoding="async"
 fetchpriority="auto"
 loading="lazy"
 alt="browser"id="h-rh-i-0"
/>&lt;/a>&lt;/li>
&lt;li>为用户配置启用 OTP 认证。
&lt;a href="./required-otp.png">

&lt;img
 src="https://idaas.xlabs.club/docs/keycloak/security-features/mfa/required-otp_hu6593641579294950690.webp"
 width="799"
 height="702"
 decoding="async"
 fetchpriority="auto"
 loading="lazy"
 alt="User OTP"id="h-rh-i-1"
/>&lt;/a>&lt;/li>
&lt;li>用户登录，未注册设备，要求注册设备。
&lt;a href="./register-otp.png">

&lt;img
 src="https://idaas.xlabs.club/docs/keycloak/security-features/mfa/register-otp_hu12669578073784448439.webp"
 width="701"
 height="901"
 decoding="async"
 fetchpriority="auto"
 loading="lazy"
 alt="Register"id="h-rh-i-2"
/>&lt;/a>&lt;/li>
&lt;li>手机端下载支持的 OTP 软件，如 FreeOTP，Google Authenticator。扫描注册，注册成功后就能看到已经生成一次性口令。
&lt;a href="./freeotp.png">

&lt;img
 src="https://idaas.xlabs.club/docs/keycloak/security-features/mfa/freeotp_hu8655660619675262284.webp"
 width="631"
 height="582"
 decoding="async"
 fetchpriority="auto"
 loading="lazy"
 alt="FreeeOTP APP"id="h-rh-i-3"
/>&lt;/a>&lt;/li>
&lt;li>登录时就会要求输入一次性验证码。
&lt;a href="./login-otp.png">

&lt;img
 src="https://idaas.xlabs.club/docs/keycloak/security-features/mfa/login-otp_hu6974089926450257796.webp"
 width="863"
 height="551"
 decoding="async"
 fetchpriority="auto"
 loading="lazy"
 alt="Login"id="h-rh-i-4"
/>&lt;/a>&lt;/li>
&lt;li>注册成功后，可以在管理控制台看到用户注册的设备，用户也可以在自己的账户页面看到注册的设备。如果手机丢了想重新注册，把已有的记录删掉就可以，删掉后下次登录会要求重新注册。&lt;br>
管理控制台:
&lt;a href="./admin-otp.png">

&lt;img
 src="https://idaas.xlabs.club/docs/keycloak/security-features/mfa/admin-otp_hu9166579955508478061.webp"
 width="1415"
 height="723"
 decoding="async"
 fetchpriority="auto"
 loading="lazy"
 alt="Admin OTP"id="h-rh-i-5"
/>&lt;/a>
自己的账户页面：&lt;br>
&lt;a href="./account-otp.png">

&lt;img
 src="https://idaas.xlabs.club/docs/keycloak/security-features/mfa/account-otp_hu14173684843865636988.webp"
 width="1196"
 height="344"
 decoding="async"
 fetchpriority="auto"
 loading="lazy"
 alt="Account OTP"id="h-rh-i-6"
/>&lt;/a>&lt;/li>
&lt;/ol>
&lt;h2 id="扩展认证方式">扩展认证方式&lt;/h2>
&lt;p>如果想自己实现认证方式，官方也提供了详细的 SPI 开发指导，我们根据指导用一天时间实现了一个短信验证码。待开源。&lt;/p>
&lt;h2 id="名字解释">名字解释&lt;/h2>
&lt;p>&lt;strong>OTP&lt;/strong> One-Time Password，一般翻译为一次性密码、动态口令、动态验证码。&lt;/p>
&lt;p>&lt;strong>HOTP&lt;/strong> HMAC-based One-Time Password，使用计数方式基于 HMAC 算法加密。算法协议为 &lt;a href="https://tools.ietf.org/html/rfc2104">RFC 2104&lt;/a>.&lt;/p>
&lt;p>&lt;strong>TOTP&lt;/strong> Time-based One-Time Password，基于时间戳算法，是时间同步，基于客户端的动态口令和服务器的时间比对，一般每 N 秒产生一个新口令，要求客户端和服务器能够保持正确的时钟，客户端和服务端基于时间计算的动态口令才能一致。算法协议为 &lt;a href="https://tools.ietf.org/html/rfc6238">RFC 6238&lt;/a>.&lt;/p>
&lt;p>开源实现&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/freeotp">FreeOTP&lt;/a>。&lt;/li>
&lt;li>&lt;a href="https://github.com/google/google-authenticator">Google Authenticator&lt;/a>。&lt;/li>
&lt;/ul></description></item><item><title>密码策略</title><link>https://idaas.xlabs.club/docs/keycloak/security-features/password-policies/</link><pubDate>Mon, 14 Dec 2020 23:54:37 +0800</pubDate><guid>https://idaas.xlabs.club/docs/keycloak/security-features/password-policies/</guid><description>&lt;p>密码策略，常见的如密码最小长度、必须包含特殊字符、密码不能与历史密码相同等。控制用户在修改密码时，新密码必须满足一定的条件，从而增强密码安全。&lt;/p>
&lt;p>Keycloak 内置了丰富的密码策略，满足常用的需求，不过默认都是不启用的，需要管理员主动设置。&lt;/p>
&lt;p>启用方式，单击 &lt;code>Authentication&lt;/code> 菜单，选择 &lt;code>Password Policy&lt;/code> 选项卡。 在右侧下拉列表框中选择要添加的策略。根据策略提示设置不同的参数，保存。&lt;/p>
&lt;p>密码策略只对新创建用户，或者用户修改密码生效，对已有用户不生效。如果想更快生效，就强制用户必须修改密码，在用户的 &lt;code>Required User Actions&lt;/code> 里增加 &lt;code>Update Password&lt;/code> 。&lt;/p>
&lt;h2 id="密码策略类型">密码策略类型&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>HashAlgorithm&lt;/p>
&lt;p>哈希算法，密码加密算法，以此算法存储，可根据官方指导自己实现算法。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Hashing Iterations&lt;/p>
&lt;p>哈希次数，指定密码在存储或验证之前被哈希的次数。
多次哈希防止数据库泄露后，密码被暴力破解。哈希次数越多安全性越高，性能越差。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Minimum Length&lt;/p>
&lt;p>密码最小长度。加大密码长度才是最有效的安全措施，什么大小写数字都是骗人的。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Digits&lt;/p>
&lt;p>密码里必须包含 N 个数字。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Lowercase Characters&lt;/p>
&lt;p>密码里必须包含 N 个小写字母。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Uppercase Characters&lt;/p>
&lt;p>密码里必须包含 N 个大写字母。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Special Characters&lt;/p>
&lt;p>密码里必须包含 N 个特殊字符，特殊字符如 &lt;code>?!#%$&lt;/code> 。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Not Username&lt;/p>
&lt;p>不能是当前用户名。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Not Email&lt;/p>
&lt;p>不能是当前用户的邮箱。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Regular Expression&lt;/p>
&lt;p>正则表达式，用 &lt;code>java.util.regex.Pattern&lt;/code> 解析。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Expire Password&lt;/p>
&lt;p>密码有效期，过期时间， N 天。超过这个时间后，用户必须修改密码。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Not Recently Used&lt;/p>
&lt;p>密码历史，不能是最近使用过的 N 个密码。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Password Blacklist&lt;/p></description></item><item><title>暴力检测</title><link>https://idaas.xlabs.club/docs/keycloak/security-features/brute-force-detection/</link><pubDate>Fri, 04 Dec 2020 23:54:37 +0800</pubDate><guid>https://idaas.xlabs.club/docs/keycloak/security-features/brute-force-detection/</guid><description>&lt;p>Brute Force Detection 暴力检测，防止密码暴力破解，登录失败 N 次锁定。&lt;/p>
&lt;h2 id="启用暴力检测">启用暴力检测&lt;/h2>
&lt;p>控制台选择 Realm，设置：Realm Settings -&amp;gt; Security Defenses -&amp;gt; Brute Force Detection。&lt;/p>
&lt;p>&lt;a href="./brute-force.png">

&lt;img
 src="https://idaas.xlabs.club/docs/keycloak/security-features/brute-force-detection/brute-force_hu7739500571624549538.webp"
 width="1108"
 height="667"
 decoding="async"
 fetchpriority="auto"
 loading="lazy"
 alt="Brute Force Detection"id="h-rh-i-0"
/>&lt;/a>&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Permanent Lockout&lt;/p>
&lt;p>ON 表示永久锁定。&lt;br>
OFF 表示临时锁定。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Max Login Failures&lt;/p>
&lt;p>登录失败达到多少次时，锁定账号。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Quick Login Check Milli Seconds&lt;/p>
&lt;p>快速登录检测，两次登录请求之间的时间间隔（单位毫秒）小于该值时，则认定为快速登录。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Minimum Quick Login Wait&lt;/p>
&lt;p>一旦被认定为快速登录，该账号将被临时锁定为该配置项配置的时长。&lt;/p>
&lt;/li>
&lt;/ul>
&lt;h2 id="解除锁定">解除锁定&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>临时锁定用户，达到锁定时长后，会自动解锁。&lt;/p>
&lt;/li>
&lt;li>
&lt;p>管理员在用户列表或用户详情里可以手动解锁。&lt;/p>
&lt;p>&lt;a href="./unlock-user.png">

&lt;img
 src="https://idaas.xlabs.club/docs/keycloak/security-features/brute-force-detection/unlock-user_hu16307795136657189630.webp"
 width="1144"
 height="787"
 decoding="async"
 fetchpriority="auto"
 loading="lazy"
 alt="解除锁定"id="h-rh-i-1"
/>&lt;/a>&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="注意事项">注意事项&lt;/h2>
&lt;ol>
&lt;li>失败次数统计仅与登录账号相关，与会话无关，关闭重启浏览器，次数不会重置。&lt;/li>
&lt;li>用户锁定后，给出的错误提示还是默认的用户名密码错误，就是不想让攻击者知道用户暂时被禁用了。&lt;/li>
&lt;/ol></description></item></channel></rss>